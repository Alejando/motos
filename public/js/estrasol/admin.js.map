{"version":3,"sources":["app.js","router.js","controllers/actualizacionMasivaCtrl.js","controllers/edicionAvisoCtrl.js","controllers/edicionContenidoCtrl.js","controllers/edicionDeUsuarioCtrl.js","controllers/edicionGuiaCtrl.js","controllers/edicionSubastaCtrl.js","controllers/edicionminosTerCtrl.js","controllers/homeCtrl.js","controllers/mainCtrl.js","controllers/nuevaSubastaCtrl.js","controllers/subastaCtrl.js","controllers/subastasCtrl.js","controllers/usuariosListaCtrl.js","factories/ModelBase.js","factories/models/AuctionModel.js","factories/models/Paginacion.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACphSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"admin.js","sourcesContent":["var glimglam = angular.module(\"glimglamAdmin\", [\n    'ngRoute',\n    'angular-clockpicker',\n    'ui.bootstrap',\n    'ui.bootstrap.datetimepicker',\n    'ngDropzone',\n    'textAngular',\n    'datatables'\n]);\n\nglimglam.constant('uiDatetimePickerConfig', {\n    dateFormat: 'yyyy-MM-dd HH:mm',\n    defaultTime: '00:00:00',\n    html5Types: {\n        date: 'yyyy-MM-dd',\n        'datetime-local': 'yyyy-MM-ddTHH:mm:ss.sss',\n        'month': 'yyyy-MM'\n    },\n    initialPicker: 'date',\n    reOpenDefault: false,\n    enableDate: true,\n    enableTime: true,\n    buttonBar: {\n        show: true,\n        now: {\n            show: true,\n            text: 'Now'\n        },\n        today: {\n            show: true,\n            text: 'Hoy'\n        },\n        clear: {\n            show: true,\n            text: 'Limpiar'\n        },\n        date: {\n            show: true,\n            text: 'Date'\n        },\n        time: {\n            show: true,\n            text: 'Time'\n        },\n        close: {\n            show: true,\n            text: 'Close'\n        }\n    },\n    closeOnDateSelection: true,\n    closeOnTimeNow: true,\n    appendToBody: false,\n    altInputFormats: [],\n    ngModelOptions: {},\n    saveAs: false,\n    readAs: false\n});\n","\nglimglam.config(function ($routeProvider) {\n    $routeProvider.\n            when('/', {\n                templateUrl: 'pages/admin/welcome.html',\n                controller: 'homeCtrl'\n            }).\n            when('subastas/sin-publicar', {\n                templateUrl: 'pages/admin/subastas-admin.html',\n                controller: 'nuevaSubastaCtrl'\n            })              \n    .when('/subastas/nueva', {\n        templateUrl: 'pages/admin/subastas-form.html',\n        controller: 'nuevaSubastaCtrl'\n    })\n    .when('/actulizar-masiva', { \n        templateUrl: 'pages/admin/actulizar-masiva.html',\n        controller: 'actualizacionMasivaCtrl'\n    })\n    .when('/subastas/:status', {\n        templateUrl: 'pages/admin/subastas-admin.html',\n        controller: 'subastasCtrl'\n    });\n    $routeProvider.when('/subasta/:id',{\n        templateUrl: 'pages/admin/subasta.html',\n        controller: 'subastaCtrl'\n    });     \n    \n    $routeProvider.\n            when('/subastas/editar', {\n                templateUrl: 'pages/admin/subastas-form.html',\n                controller: 'edicionSubastaCtrl'\n            }).\n            when('/subastas/usuarios-lista', {\n                templateUrl: 'pages/admin/usuarios-lista.html',\n                controller: 'usuariosListaCtrl'\n            }).\n            when('/subastas/edicion-usuario', {\n                templateUrl: 'pages/admin/usuarios-lista.html',\n                controller: 'edicionDeUsuarioCtrl'\n            }).\n            when('/subastas/edicion', {\n                templateUrl: 'pages/admin/form-contenidos.html',\n                controller: 'edicionContenidoCtrl'\n            }).\n            when('/subastas/edicion/guia-de-uso', {\n                templateUrl: 'pages/admin/form-contenidos.html',\n                controller: 'edicionGuiaCtrl'\n            }).\n            when('/subastas/edicion/terminos', {\n                templateUrl: 'pages/admin/form-contenidos.html',\n                controller: 'edicionminosTerCtrl'\n            }).\n            when('/subastas/edicion/avisos', {\n                templateUrl: 'pages/admin/form-contenidos.html',\n                controller: 'edicionAvisoCtrl'\n            })\n\n            ;\n});\n","glimglam.controller('actualizacionMasivaCtrl', function ($scope) {\n    $scope.titulo = \"Aviso de privacidad\";\n    $scope.$parent.subSeccion = \"Actualización Masiva\";\n});","glimglam.controller('edicionAvisoCtrl', function ($scope) {\n    $scope.titulo = \"Aviso de privacidad\";\n    $scope.$parent.subSeccion = \"Edición Contenido \\\"Aviso de privacidad\\\"\";\n});","glimglam.controller('edicionContenidoCtrl', function ($scope) {\n    $scope.$parent.subSeccion = \"Edición Contenido \\\"Acerca de\\\"\";\n    $scope.titulo = \"Acerca de \";\n});","\nglimglam.controller('edicionDeUsuarioCtrl', function ($scope) {\n    $scope.titulo = \"Edición de usuario\";\n});","glimglam.controller('edicionGuiaCtrl', function ($scope) {\n    $scope.$parent.subSeccion = \"Edición Contenido \\\"Guía de uso\\\"\";\n    $scope.titulo = \"Guía de uso \";\n});","glimglam.controller('edicionSubastaCtrl', function ($scope) {\n    $scope.titulo = \"Edición de subasta\";\n});","glimglam.controller('edicionminosTerCtrl', function ($scope) {\n    $scope.$parent.subSeccion = \"Edición de Contenido \\\"Términos y condiciones\\\"\";\n    $scope.titulo = \"Términos y condiciones\";\n});","glimglam.controller('homeCtrl', function ($scope) {\n    $scope.msj = \"Bienvenidos\";\n});","glimglam.controller('mainCtrl', function ($scope) {\n    $scope.msj = \"Main Controller\";\n    $scope.subSeccion = false;\n});","glimglam.controller('nuevaSubastaCtrl', function ($scope, $log, Auction) {\n    //<editor-fold defaultstate=\"collapsed\" desc=\"configuracion de uis\">\n    //<editor-fold defaultstate=\"collapsed\" desc=\"configuracion de hr inicial\">\n    $scope.optionsStartTime = {\n        donetext: 'Establecer Hr. de Inicio',\n        twelvehour: true,\n        nativeOnMobile: !true,\n        placement: 'bottom',\n        align: 'right'\n    };\n    //</editor-fold>\n    //<editor-fold defaultstate=\"collapsed\" desc=\"configuracion de hr final\">\n    $scope.optionsEndingTime = {\n        donetext: 'Establecer Hr. de Final',\n        twelvehour: true,\n        nativeOnMobile: true,\n        placement: 'bottom',\n        align: 'right'\n    };\n    //</editor-fold>\n    //<editor-fold defaultstate=\"collapsed\" desc=\"configuracion de datepiker Inicial\">\n    $scope.fechaInicio = {\n        date: new Date(),\n        datepickerOptions: {\n            showWeeks: false,\n            startingDay: 1,\n            language: 'es',\n            dateDisabled: function (data) {\n                return (data.mode === 'day' && (new Date().toDateString() == data.date.toDateString()));\n            }\n        }\n    };\n    //</editor-fold>\n    //<editor-fold defaultstate=\"collapsed\" desc=\"configuracion de datepiker final\">\n    $scope.picker2 = {\n        date: new Date('2015-03-01T00:00:00Z'),\n        datepickerOptions: {\n            showWeeks: false,\n            startingDay: 1,\n            language: 'es',\n            dateDisabled: function (data) {\n                return (data.mode === 'day' && (new Date().toDateString() == data.date.toDateString()));\n            }\n        }\n    };\n    \n    //</editor-fold>\n    //<editor-fold defaultstate=\"collapsed\" desc=\"configuracion de dropzone fotos\">\n    $scope.dropzoneConfig = {\n        parallelUploads: 3,\n        maxFileSize: 30,\n        url: 'file-upload',\n        dictDefaultMessage:'Click o arrastra una imagen aquí',\n        \n    };\n    $scope.dzProcessing = function () {\n      this.options.url = \"/api/auction/\"+$scope.auction.id+\"/addPhoto\";\n    };\n    $scope.dzAddedFile = function (file) {\n       $scope.$apply(function () {\n           $scope.pics.push(URL.createObjectURL(file));\n        });\n    };\n    $scope.removePic = function (pic){\n        $scope.pics.splice($scope.pics.indexOf(pic),1);\n    };\n    $scope.dzError = function (file, errorMessage) {\n        $log.log(errorMessage);\n    };\n    //</editor-fold>\n    //</editor-fold>\n    $scope.creating = false;\n    $scope.auction = new Auction({});\n    $scope.hrBegin = moment(new Date());\n    $scope.hrEnd = moment(new Date());\n    $scope.createNewAuction = function () {\n        var titleTemp = $scope.auction.title; \n        $scope.auction = new Auction({\n            title : titleTemp,\n            startDate : new Date(),\n            endDate : new Date()\n        });\n        $scope.auction.save().then(function(){\n            $scope.creating = true;\n        });\n    };\n    $scope.saveSaveAuction = function () {\n        $scope.auction.save();\n        window.open(\"#/subastas/en-proceso\",'_self');\n    };\n    $scope.openCalendar = function (e, picker) {\n        $scope[picker].open = true;\n    };\n    $scope.pics = [\n//        'http://demo.estrasol.com.mx/glimglam/img/productos/producto02.png',\n//        'http://demo.estrasol.com.mx/glimglam/img/productos/producto02.png',        \n//        \"http://demo.estrasol.com.mx/glimglam/img/productos/producto02a.png\",\n//        \"http://demo.estrasol.com.mx/glimglam/img/productos/producto02b.png\"\n    ];\n    $scope.creando = false;\n    \n\n    $scope.$parent.subSeccion = \"Nueva Subasta\";\n    $scope.titulo = \"Nueva Subasta\";\n});\n","glimglam.controller('subastaCtrl', function ($scope, $routeParams, Auction, $http) {\n    $scope.msj = \"Main Controller\";\n    $scope.subSeccion = false;\n    $scope.auction;\n    $scope.photos = [];\n    Auction.getById($routeParams.id).then(function(a){\n        $scope.auction = a;\n        var url = laroute.route(Auction.aliasUrl())+'/'+a.id+\"/photos/\";\n        console.log(url);\n//        return ;\n        $http({\n            'method' : 'GET',\n//            'data' : data,\n            'url' : url\n        }).then(function(result) {\n            $scope.photos = result.data; \n        },function(r){\n           \n        });\n    });\n});","glimglam.controller('subastasCtrl', function ($scope, $routeParams, Auction) {\n    var status = $routeParams.status;\n    console.log(status);\n    var self = this;\n    $scope['fn_en-proceso'] = function () {\n        $scope.$parent.subSeccion = \"Subastas en proceso\";\n        console.log(\"as\");\n    };\n    $scope['fn_terminadas'] = function () {\n        $scope.titulo = \"Terminados\";\n        $scope.$parent.subSeccion = \"Subastas terminadas\";\n        console.log(\"ok\");\n    };\n    if($scope[\"fn_\" + status]){\n        $scope[\"fn_\" + status]();\n    }\n    $scope.allAuctions = [];\n    Auction.getAll().then(function(allAuctions){\n        $scope.allAuctions = allAuctions;\n    });\n});","glimglam.controller('usuariosListaCtrl', function ($scope) {\n    $scope.titulo = \"Lista de Usuarios\";\n});","glimglam.factory('ModelBase', function (Paginacion, $q, $http, $timeout) {\n    //<editor-fold defaultstate=\"collapsed\" desc=\"constructor\">\n    var ModelBase = function (args) {\n        this.setProperties(args);\n        this.relations = {};\n    };\n    //</editor-fold>\n    //<editor-fold defaultstate=\"collapsed\" desc=\"Metodos de Instancia (prototype)\">\n    ModelBase.prototype = {\n        //<editor-fold defaultstate=\"collapsed\" desc=\"setProperties\">\n        setProperties: function (data) {            \n            var self = this;\n            var atributes = self.model().attributes; \n            var setters = self.model().setters;\n            angular.forEach(atributes, function (attr) {\n                if(setters[attr]){\n                    self[attr] = setters[attr].apply(self,[data[attr]]);\n                    return;\n                }\n                self[attr] = data[attr];\n            });\n        },\n        getProperties : function () {\n            var self = this;\n            var data = {};\n            var attributes = self.model().attributes;\n            angular.forEach(attributes, function (attr){\n                data[attr] = self[attr];\n            });\n            return data;\n        },\n        create : function () {\n            var  data = this.getProperties();\n            var model = this.model();\n            var self = this;\n            var url = laroute.route(model.aliasUrl());        \n            var $defer = $q.defer();\n            $http({\n                'method' : 'POST',\n                'data' : data,\n                'url' : url\n            }).then(function(result) {\n                self.setProperties(result.data.model);\n                instancias =model.model().addCache(self);\n                $defer.resolve(model);\n            },function(r){\n                $defer.reject(r);\n            });\n            return $defer.promise;\n        },\n        update : function () {\n            console.log(\"Flata implementar actualizacion\");\n        },\n        save : function () {\n            if(this.id){\n                return this.update();\n            }\n            return this.create();\n        \n        },\n        getter : function (key){\n            return this[\"_obj_\" + key];\n        },\n        hasMany : function (Model, key) {\n            var self = this;\n            var defer = $q.defer();\n            var url = laroute.route(self.model().aliasUrl()  + '.relation',{\n                'id' : self.id,\n                'relation' :  key\n            });\n            $http({\n                'method' : 'GET',\n                'url' : url\n            }).then(function(result){                \n                var instancias = Model.build(result.data);\n                self.relations[key] = instancias;\n                defer .resolve(instancias);                                \n            },function(r) {                \n                defer .reject(r);\n            });\n            return defer.promise;\n        },\n        belongsTo : function (Model, key) {            \n            var self = this;\n            var defer = $q.defer();\n            var id = this[key + \"_id\"];\n            if(id) {\n                Model.getById(id).then(function(entidad) {                                  \n                    self.relations[key] = entidad;                         \n                    defer.resolve(entidad);\n                }, function(r){\n                    defer.reject(r);\n                });\n            } else {\n                $timeout(function() {\n                    defer.reject();\n                }, 10);\n            }\n            \n            return defer.promise;\n        }\n        //</editor-fold>\n    };\n    //</editor-fold>\n    //<editor-fold defaultstate=\"collapsed\" desc=\"Metodos Estaticos\">\n    ModelBase.findCache = function(obj){        \n        var cache = this.model().cache;                       \n        obj = cache[obj.id];\n        if(obj){\n            return obj;\n        } else {\n            return false;\n        }\n    };\n    //Helper para setear fechas \n    ModelBase.setDate = function (value) {\n        if(angular.isString(value)) {\n            return new Date(value);\n        }\n        return value;\n    };\n    ModelBase.model = function () {\n        return this.prototype.model();\n    };\n    ModelBase.getCache = function () {\n        return this.cache;\n    };    \n    ModelBase.RELATIONS = {\n        KEY : 0,\n        MODEL : 1,\n        FUNCTION : 2\n    };\n    \n    ModelBase.addRelation = function (key, fnModel, fn) {\n        var model = this.model();        \n        if(angular.isString(fn)){//funciones de relaciones por defecto                \n            switch(fn){\n                case 'belongsTo' : fn = function () {                           \n                        return this.belongsTo(fnModel, key);\n                    };\n                    model.attributes.push(key + \"_id\");\n                    break;\n                case 'hasMany' : fn = function () {                              \n                        return this.hasMany(fnModel, key);\n                    };\n                break;\n            }                \n        } \n        model.prototype[key] = fn;\n    };\n    \n    ModelBase.createModel = function (model, statics, prototype) {\n        angular.extend(model.prototype, ModelBase.prototype, prototype);\n        angular.extend(model, ModelBase, statics);\n        model.prototype.model = function () {            \n            return model;\n        };\n        model.cache = [];\n        angular.forEach(model.relations, function(v){            \n            var key = v[ModelBase.RELATIONS.KEY];            \n            var fn = v[ModelBase.RELATIONS.FUNCTION];\n            var fnModel = v[ModelBase.RELATIONS.MODEL];\n            model.addRelation(key,fnModel,fn);\n        });\n//        console.log(\"models->\"+model.attributes);\n        return model;\n    };\n    ModelBase.aliasUrl = function () {\n        return this.alias;\n    };\n    ModelBase.addCache = function(obj) {        \n        var Model = this.model();        \n        var cache = Model.getCache();\n        cache[obj.id] = obj;        \n        return obj;\n    };\n    //<editor-fold defaultstate=\"collapsed\" desc=\"build\">\n    ModelBase.build = function (data) {        \n        var Model = this.model(), obj;\n        if (angular.isArray(data)) {            \n            var arrInst = [];\n            var i=0;\n            angular.forEach(data, function (d) {                \n                obj = Model.findCache(d);                                \n                if(obj) {\n                    arrInst.push(obj);\n                    i++;\n                    console.log(\"ya en cache \" +i);\n                } else {\n                    obj = Model.addCache(new Model(d));  \n                    arrInst.push(obj);\n                }\n            });\n//            console.log(arrInst);\n            return arrInst;\n        }\n        obj = Model.findCache(data);\n        if(obj) {              \n            return obj;\n        } else {                        \n            obj = Model.addCache(new Model(data));\n        }\n        \n        return obj;\n    };\n    //</editor-fold>\n    //<editor-fold defaultstate=\"collapsed\" desc=\"getAll\">\n    ModelBase.getAll = function () {\n        var self = this.model();\n        var url = laroute.route(this.aliasUrl());        \n        var $defer = $q.defer();\n        $http({\n            'method' : 'GET',\n            'params' : {\n                'paginacion' : false\n            },\n            'url' : url\n        }).then(function(result) {\n            var instancias =self.model().build(result.data);\n            $defer.resolve(instancias);\n        },function(r){\n            $defer.reject(r);\n        });\n        return $defer.promise;\n    };\n    //</editor-fold>\n    //<editor-fold defaultstate=\"collapsed\" desc=\"paginado\">\n    ModelBase.paginado = function () {            \n        var self = this;        \n        var url = laroute.route(this.aliasUrl());\n        var $defer = $q.defer();        \n        $http({\n            'method' : 'GET',\n            'params' : { \n                'paginacion' : true\n            },\n            'url' : url\n        }).then(function(result) {\n            var arrInst = [], pojsos, paginacion;            \n                pojsos = result.data.data;\n                paginacion = new Paginacion.build(result.data, self.model());\n            $defer.resolve({\n                'instancias': arrInst,\n                'paginacion' : paginacion\n            });\n        });\n        return $defer.promise;\n    };\n    //</editor-fold>\n    ModelBase.remove = function () {\n        console.log(\"pediente crear metodo de eliminacion\");\n    };\n    ModelBase.save  = function () {\n        console.log(\"pendiente crear método de creacion/actualizacion\");\n    };\n    //<editor-fold defaultstate=\"collapsed\" desc=\"getById\">\n    ModelBase.getById = function(id, args) {        \n        var data = angular.extend(args || {} , {\n            id : id\n        });        \n        var self = this; \n        var $defer = $q.defer();                \n        var objCache = self.model().findCache(data);     \n//        console.log(objCache);\n        if(objCache !== false) {\n            $timeout(function() {\n                $defer.resolve(objCache);\n            }, 10);\n        } else {   \n            data = {};\n            data[this.aliasUrl()] = id;\n            var url = laroute.route(this.aliasUrl() + '.show', data);            \n            $http({\n                'method' : 'GET',\n                'url' : url\n            }).then(function(result) {\n                var instancias = self.model().build(result.data);\n                $defer.resolve(instancias);\n            }, function(r) {                \n                $defer.reject(r);\n            });\n        }\n        return $defer.promise;\n    };\n    //</editor-fold>\n    //</editor-fold>\n    return ModelBase;\n});\n","glimglam.factory('Auction', function (ModelBase) {    \n    var Auction = function (args) {\n        ModelBase.apply(this, arguments);\n    };\n    ModelBase.createModel(Auction , {        \n        alias: 'auction',\n//        cache : [],\n        setters : {\n            startDate : ModelBase.setDate,\n            endDate : ModelBase.setDate\n        },\n        attributes: [\n            'id',\n            'title',\n            'description',\n            'maxBid',\n            'minBid',\n            'maxOffer',\n            'userTop',\n            'delay',\n            'target',\n            'startDate',\n            'endDate',\n            'published',\n            'status'\n        ],\n        relations : []\n    }, {});    \n    //<editor-fold defaultstate=\"collapsed\" desc=\"buscarFolio\">\n    return Auction;\n});","/* global angular, glimglam */\nglimglam.factory('Paginacion', function () {\n    var Paginacion = function (args) {        \n        this.setPropieties(args);\n    };\n    //Se hereda el prototipo base y se agregan los metodos personalizados\n    Paginacion.prototype = {\n        setPropieties: function (data) {            \n            var self = this;\n            var atributes = this.getAttributes();\n            angular.forEach(atributes, function (value) {                \n                self[value] = data[value];\n            });\n        },\n        getAttributes: function () {\n            return [\n                'current_page',\n                'from',\n                'last_page',\n                'next_page_url',\n                'per_page',\n                'prev_page_url',\n                'to',\n                'total'\n            ];\n        }\n    };\n    Paginacion.build = function (data) {        \n        return new Paginacion(data);\n    };\n    return Paginacion;\n});"],"sourceRoot":"/source/"}